/* Unified step rhythm */
.step { margin: 0; padding-top: 0; }
/* Apply vertical rhythm only between adjacent steps */
.step + .step { margin-top: var(--fc-step-vspace); }
/* When detect follows upload, use a smaller gap */
.step--upload + .step--detect { margin-top: var(--fc-space-1) !important; }
.step h3, .step .stMarkdown h3 {
  margin-top: 0 !important;
  margin-bottom: var(--fc-heading-bottom) !important;
}

/* First step in each column starts flush with the top */
[data-testid="stHorizontalBlock"] > [data-testid="column"] > div:first-child,
[data-testid="column"] > div:first-child .step {
  margin-top: 0 !important;
  padding-top: 0 !important;
}

/* Streamlit sometimes nests extra blocks; flatten the very first one */
[data-testid="column"] [data-testid="stVerticalBlock"] > div:first-child {
  margin-top: 0 !important;
  padding-top: 0 !important;
}

/* Inside any .step, ensure the first inner block doesn't reintroduce space */
.step [data-testid="stVerticalBlock"] > div:first-child {
  margin-top: 0 !important;
  padding-top: 0 !important;
}

.form-label {
  color: var(--fc-text-1);
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: var(--fc-space-1);
}
.form-label--inline { margin-bottom: 0; display:flex; align-items:center; min-height:38px; }

.app-button, .stButton > button {
  border-radius: var(--fc-radius) !important;
  min-height: 44px;
  width: 100%;
  font-weight: 600;
  font-size: .95rem;
  letter-spacing: .01em;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid transparent;
  transition: background .15s ease, border-color .15s ease, transform .15s ease, box-shadow .15s ease;
}
.app-button--back,
.btn--back .stButton > button,
button.btn--back {
  background: transparent !important;
  color: var(--fc-danger) !important;
  border-color: rgba(239,68,68,.6) !important;
}
.app-button--back:hover,
.btn--back .stButton > button:hover,
button.btn--back:hover {
  background: rgba(239,68,68,.10) !important;
  border-color: rgba(239,68,68,.9) !important;
  transform: translateY(-1px);
}
.app-button--continue,
.btn--continue .stButton > button,
button.btn--continue {
  background: linear-gradient(135deg, rgba(34,197,94,.95), rgba(16,185,129,.95)) !important;
  color: #ecfdf5 !important;
  border-color: rgba(34,197,94,.8) !important;
  box-shadow: var(--fc-shadow-1);
}
.app-button--continue:hover,
.btn--continue .stButton > button:hover,
button.btn--continue:hover {
  transform: translateY(-1px);
  box-shadow: var(--fc-shadow-1h);
}
.app-button--disabled,
.btn--disabled .stButton > button,
button.btn--disabled,
.stButton > button:disabled {
  opacity: .55 !important;
  transform: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
}

/* Chips */
.chip { display:inline-block; padding:.2rem .5rem; border-radius:9999px; font-size:.8rem; margin-right:.25rem; }
.chip.ok   { background:#065f46; color:#ecfdf5; }
.chip.warn { background:#7c2d12; color:#ffedd5; }
.chip.info { background:#1e293b; color:#e2e8f0; }

.spacer-sm { height: var(--fc-step-vspace); }

/* Video viewport component */
.video-viewport-container {
  width: 100%; max-width: 720px; margin: 0 auto var(--fc-video-bottom) auto;
  aspect-ratio: 16 / 9;
  background: #000; border-radius: var(--fc-radius); overflow: hidden;
  display: flex; align-items: center; justify-content: center;
}
.video-viewport-container video { width:100%; height:100%; object-fit:contain; }

/* Results panel shared tweaks */
.results-panel { margin-top: 0 !important; display:flex; flex-direction:column; gap: var(--fc-hstack-gap); }
.results-panel h3:first-child { margin-top: 0 !important; }
.results-panel .stDataFrame { margin-bottom: var(--fc-space-1); }
.results-panel video { border-radius: var(--fc-radius); }
.results-panel [data-testid="stHorizontalBlock"] { gap: var(--fc-hstack-gap) !important; }
.results-panel [data-testid="column"] .stButton > button { width: 100%; }

/* Main grid: tighter horizontal gap between the 3 primary columns */
.app-grid [data-testid="stHorizontalBlock"] {
  column-gap: var(--fc-space-3) !important; /* 0.5rem */
}
